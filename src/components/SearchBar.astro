---
import { searchWords } from '../lib/db';

interface Props {
  initialQuery: string;
}

const { initialQuery } = Astro.props;
const query = Astro.url.searchParams.get('word') || initialQuery;
const suggestions = query ? await searchWords(query) : [];
---

<form class="search-bar" action="/" method="get">
    <input type="text" name="word" placeholder="தமிழ் சொல்லைத் தேடுங்கள்..." value={query} autocomplete="off" />
    <button type="submit">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18"><path fill="none" stroke="#A445ED" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m12.663 12.663 3.887 3.887M1 7.664a6.665 6.665 0 1 0 13.33 0 6.665 6.665 0 0 0-13.33 0Z"/></svg>
    </button>
</form>

<style>
    .search-bar {
        display: flex;
        flex-direction: column;
        margin-bottom: 1.5rem;
        position: relative;
    }
    input {
        flex-grow: 1;
        padding: 0.75rem;
        font-size: 1rem;
        border: none;
        border-radius: 16px;
        background-color: var(--input-bg);
        color: var(--text-color);
    }
    input:focus {
        outline: 1px solid var(--accent-color);
    }
    button {
        position: absolute;
        right: 0.75rem;
        top: 0.75rem;
        background: none;
        border: none;
        cursor: pointer;
    }
    .suggestions {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background-color: var(--bg-color);
        border: 1px solid var(--input-bg);
        border-radius: 0 0 16px 16px;
        list-style-type: none;
        padding: 0;
        margin: 0;
        z-index: 10;
    }
    .suggestions li {
        padding: 0.5rem 1rem;
    }
    .suggestions a {
        color: var(--text-color);
        text-decoration: none;
    }
    .suggestions a:hover {
        color: var(--accent-color);
    }
</style>